Przykład:
<Znacznik atrybut1="XXX" atrybut2="XXX" ...>
	*zawartość*
</Znacznik>

* przy atrybucie oznacza atrybut nieobowązkowy

level:
	atrybuty:
		name* - nazwa, nieużywany przez grę
		background* - tło, nieużywany przez grę
	
	zawartość:
		pozostałe zanczniki opisu poziomu

platform:
	atrybuty:
		position - pozycja [m]
		texture - tekstura, patrz dokumentacja/grafiki.txt
		layer* - (domyślne 5) warstwa, na której znajduje się platforma (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		rotation* - (domyślnie 0) obrót tekstury, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie tekstury w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		visible* - (domyślnie 1) widoczność platformy, platforma niewidoczna jest niewidoczna (wow) i nie rzuca cienia, kiedy jest ustawione na 0, nie trzeba podawać tekstury
	
	zawartość:
		znaczniki <v> opisujące kolejne wierzchołki
	
v:
	zawartość - pozycja wierzchołka [m]
	
vt:
	zawartość - pozycja wierzchołka [m], pozycja danego wierzchołka na teksturze w pikselach - przydatne w przypadku pojedyńczych tekstur

object:
	atrybuty:
		position - pozycja [m]
		texture - tekstura
		height - wysokość [m], używana do obliczania skali
		rotation* - (domyślnie 0) obrót obiektu względem lewego górnego rogu, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		layer* - (domyślne 3) warstwa, na której znajduje się obiekt (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		
animated_object:
	atrybuty:
		position - pozycja [m]
		texture - tekstura
		height - wysokość [m], używana do obliczania skali
		rotation* - (domyślnie 0) obrót obiektu względem lewego górnego rogu, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		layer* - (domyślne 3) warstwa, na której znajduje się obiekt (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		fpf* - (domyślnie 1) co ile klatek gry ma się zmieniać klatka animacji obiekty (rozwiązanie tymczasowe)
		delta* - (domyślnie 0) od której klatki zacząć animację, bierze pod uwagę ustawienie fpf (przykład fpf="10" delta = "15" - zacznie od 2 klatki animacji, po 5 klatkach gry przejdzie do 3, dalej już co 10)
		
moving_object:
	atrybuty:
		position - pozycja [m]
		texture - tekstura
		height - wysokość [m], używana do obliczania skali
		rotation* - (domyślnie 0) obrót obiektu względem lewego górnego rogu, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		layer* - (domyślne 3) warstwa, na której znajduje się obiekt (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		fpf* - (domyślnie 1) co ile klatek gry ma się zmieniać klatka animacji obiekty (rozwiązanie tymczasowe)
		delta* - (domyślnie 0) od której klatki zacząć animację, bierze pod uwagę ustawienie fpf (przykład fpf="10" delta = "15" - zacznie od 2 klatki animacji, po 5 klatkach gry przejdzie do 3, dalej już co 10)
	
	zawartość:
		znaczniki <p> opsujące trasę ruchu obiektu
		
		
pendulum:
	atrybuty:
		position - pozycja [m]
		texture - tekstura, patrz dokumentacja/grafiki.txt
		line - tekstura liny, na której rusza się wahadło
		length - długość liny [m]
		angle - początkowy kąt wychylenia wahadła [stopnie]
		layer* - (domyślne 5) warstwa, na której znajduje się platforma (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		rotation* - (domyślnie 0) obrót tekstury, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie tekstury w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		visible* - (domyślnie 1) widoczność platformy, platforma niewidoczna jest niewidoczna (wow) i nie rzuca cienia, kiedy jest ustawione na 0, nie trzeba podawać tekstury
		
	zawartość:
		znaczniki <v> lub <vt> opisujące kolejne wierzchołki
		znaczniki <a> opisujące punkty zaczepienia lin wahadła
		
a:
	zawartość - pozycja punktu [m]
	
linear_platform:
	atrybuty:
		position - pozycja [m]
		texture - tekstura, patrz dokumentacja/grafiki.txt
		layer* - (domyślne 5) warstwa, na której znajduje się platforma (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
		rotation* - (domyślnie 0) obrót tekstury, zgodnie z ruchem wskazówek zegara [stopnie]
		flip* - (domyślnie 1,1) odbicie tekstury w osi x i w osi y (-1 - odbicie, 1 - brak odbicia) (przykład flip="-1,1" - odbicie w osi x, baz odbicia w osi y)
		visible* - (domyślnie 1) widoczność platformy, platforma niewidoczna jest niewidoczna (wow) i nie rzuca cienia, kiedy jest ustawione na 0, nie trzeba podawać tekstury
		
	zawartość:
		znaczniki <v> lub <vt> opsujące kolejne wierzchołki
		znaczniki <p> opsujące trasę ruchu platformy
		
p:
	zawartość - pozycja punktu na trasie platformy, czas podróży to tego punktu w klatkach
	
light:
	atrybuty:
		position - pozycja [m]
		intensity* - (domyślnie 1) siła światła w stosunku do domyślnej, domyślne światło świeci na 15,625m
		color* - (domyślnie 255,255,255) kolor światła r,g,b

wall:
	atrybuty:
		position - pozycja [m]
		texture - tekstura, patrz dokumentacja/grafiki.txt
		layer* - (domyślne 1) warstwa, na której znajduje się ściana (liczone "od dołu"), liczba od 0 do 11, pierwsze 7 jest pod graczem, 3 kolejne pomiędzy nim, a światłem, 2 ostatnie nad światłem
	
	zawartość:
		znaczniki <v> opisujące kolejne wierzchołki
		
damage_zone:
	atrybuty:
		position - pozycja [m]
		
	zawartość:
		znaczniki <v> opisujące kolejne wierzchołki
		znaczniki <d> opisujące sekwencję zadawania obrażeń przez strefę
		
v:
	zawartość - obrażenia zadawane przez strefę, długość okresu zadawanie tych obrażeń